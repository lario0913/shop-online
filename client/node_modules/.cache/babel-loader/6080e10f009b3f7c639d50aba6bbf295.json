{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFail = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAIL,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionMap)); // // updateCollections(collectionMap)\n      // this.setState({loading:false})\n    }).catch(error => dispatch(fetchCollectionFail(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFail","errorMessage","FETCH_COLLECTIONS_FAIL","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AAGA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACrDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBAD+B;AAErDC,EAAAA,OAAO,EAAEF;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMG,mBAAmB,GAAGC,YAAY,KAAK;AAChDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,sBAD0B;AAEhDH,EAAAA,OAAO,EAAGE;AAFsC,CAAL,CAAxC;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEAY,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEM,MAAMC,QAAN,IAAkB;AACpB,YAAMC,aAAa,GAAGlB,8BAA8B,CAACiB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACc,aAAD,CAAvB,CAAR,CAFoB,CAGpB;AACA;AACH,KAPD,EAQCC,KARD,CAQOC,KAAK,IAAIR,QAAQ,CAACJ,mBAAmB,CAACY,KAAK,CAACC,OAAP,CAApB,CARxB;AASH,GAbD;AAcH,CAfM","sourcesContent":["import ShopActionTypes from './shop.types'\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\n\r\nexport const fetchCollectionStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n})\r\n\r\nexport const fetchCollectionSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionFail = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAIL,\r\n    payload : errorMessage\r\n})\r\n\r\nexport const fetchCollectionStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections')\r\n        dispatch(fetchCollectionStart())\r\n\r\n        collectionRef\r\n        .get()\r\n        .then(async snapshot => {\r\n            const collectionMap = convertCollectionSnapshotToMap(snapshot)\r\n            dispatch(fetchCollectionSuccess(collectionMap))\r\n            // // updateCollections(collectionMap)\r\n            // this.setState({loading:false})\r\n        })\r\n        .catch(error => dispatch(fetchCollectionFail(error.message)))\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}