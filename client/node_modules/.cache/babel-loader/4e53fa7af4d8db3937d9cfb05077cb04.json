{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport shopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFail } from '../shop/shop.action';\nexport function* fetchCollectionsAsync() {\n  yield console.log('No lele');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFail(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(shopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionSuccess","fetchCollectionFail","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,8BAAnB,QAAwD,+BAAxD;AACA,SAAQC,sBAAR,EAAgCC,mBAAhC,QAA0D,qBAA1D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAI,MAAMd,IAAI,CAACI,8BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMX,GAAG,CAACI,sBAAsB,CAACS,aAAD,CAAvB,CAAT;AAEH,GAND,CAMC,OAAMC,KAAN,EAAa;AACV,UAAMd,GAAG,CAACK,mBAAmB,CAACS,KAAK,CAACC,OAAP,CAApB,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMlB,UAAU,CACZG,eAAe,CAACgB,uBADJ,EAEZX,qBAFY,CAAhB;AAIH","sourcesContent":["import {takeLatest, call, put} from 'redux-saga/effects'\r\nimport shopActionTypes from './shop.types'\r\nimport {firestore, convertCollectionSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport {fetchCollectionSuccess, fetchCollectionFail} from '../shop/shop.action'\r\n\r\nexport function* fetchCollectionsAsync (){\r\n    yield console.log('No lele')\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections')\r\n        const snapshot = yield collectionRef.get()\r\n        const collectionMap =  yield call(convertCollectionSnapshotToMap, snapshot)\r\n        yield put(fetchCollectionSuccess(collectionMap))\r\n\r\n    }catch(error) {\r\n        yield put(fetchCollectionFail(error.message))\r\n    }\r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart (){\r\n    yield takeLatest(\r\n        shopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}