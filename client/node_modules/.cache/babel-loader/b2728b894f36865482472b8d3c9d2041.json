{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga'; // import thunk from 'redux-thunk'\n\nimport rootReducer from './root.reducer';\nimport rootSaga from './root.saga'; // const middlewares = [thunk]\n\nconst sagaMiddleWare = createSagaMiddleware();\nconst middlewares = [sagaMiddleWare];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleWare.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleWare","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAEA;;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CAIA;;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAGA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAQE,EAAAA;AAAR,CAAf","sourcesContent":["import {createStore, applyMiddleware} from 'redux'\r\nimport logger from 'redux-logger'\r\nimport {persistStore} from 'redux-persist'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\n// import thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './root.reducer'\r\nimport rootSaga from './root.saga'\r\n\r\n\r\n\r\n// const middlewares = [thunk]\r\n\r\nconst sagaMiddleWare = createSagaMiddleware()\r\nconst middlewares = [sagaMiddleWare]\r\n\r\nif (process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nsagaMiddleWare.run(rootSaga)\r\n\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default {store, persistor}"]},"metadata":{},"sourceType":"module"}