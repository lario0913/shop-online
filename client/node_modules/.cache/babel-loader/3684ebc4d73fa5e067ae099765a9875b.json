{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\lario\\\\projects\\\\react\\\\crown-clothings\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(auth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, auth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data)));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","userAuth","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import {takeLatest, put, all, call} from 'redux-saga/effects'\r\n\r\nimport userActionTypes from './user.types'\r\nimport {signInSuccess,\r\n        signInFailure,\r\n        signOutSuccess,\r\n        signOutFailure,\r\n        signUpSuccess,\r\n        signUpFailure} from './user.actions'\r\n\r\nimport {auth,\r\n    googleProvider,\r\n    createUserProfileDocument,\r\n    getCurrentUser} from '../../firebase/firebase.utils'\r\n\r\nexport function* getSnapshotFromUserAuth (auth, additionalData){\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, auth, additionalData)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(signInSuccess({id:userSnapshot.id, ...userSnapshot.data}))\r\n\r\n    }catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport function* signInWithGoogle(){\r\n    try {\r\n        const {user} = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n\r\n    }catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signInWithEmail({payload: {email, password}}){\r\n    try {\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password)\r\n        yield getSnapshotFromUserAuth(user)\r\n    }catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* isUserAuthenticated (){\r\n    try {\r\n        const userAuth = yield getCurrentUser()\r\n        if(!userAuth) return\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n\r\n    } catch (error) {\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\nexport function* signOut () {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n        \r\n    } catch (error) {\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\nexport function* signUp ({payload : {email, password, displayName}}) {\r\n    try {\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password)\r\n        yield put(signUpSuccess({user, additionalData: {displayName}}))\r\n\r\n    } catch (error) {\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\nexport function* signInAfterSignUp ({payload : {user, additionalData}}) {\r\n    yield getSnapshotFromUserAuth(user, additionalData)\r\n}\r\n\r\n\r\n\r\n\r\nexport function* onGoogleSignInStart () {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle)\r\n}\r\nexport function* onEmailSignInStart () {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail)\r\n}\r\nexport function* onCheckUserSession () {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\nexport function* onSignOut () {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\r\n}\r\nexport function* onSignUpStart () {\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\r\n}\r\nexport function* onSignUpSuccess () {\r\n    yield takeLatest(userActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\r\n}\r\n\r\n\r\n\r\nexport function* userSaga () {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOut),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess)\r\n    ])\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}