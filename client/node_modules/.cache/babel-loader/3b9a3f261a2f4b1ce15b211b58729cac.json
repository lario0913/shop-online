{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\lario\\\\projects\\\\react\\\\crown-clothings\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\lario\\\\projects\\\\react\\\\crown-clothings\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\lario\\\\projects\\\\react\\\\crown-clothings\\\\client\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    required: true,\n    value: email,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    label: \"password\",\n    type: \"password\",\n    name: \"password\",\n    required: true,\n    value: password,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Sign In\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Sign In \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \" \", ' ', \" Sign In With Google \", ' ', \" \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport './sign-in.styles.scss'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport {googleSignInStart, emailSignInStart} from '../../redux/user/user.actions'\r\n\r\n\r\nconst SignIn = ({emailSignInStart, googleSignInStart}) =>  {\r\n\r\n    const [userCredentials, setCredentials] = useState({email: '', password: ''})\r\n\r\n\r\n    const {email, password} = userCredentials\r\n\r\n    const handleSubmit= async event => {\r\n        event.preventDefault();\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const {value, name} = event.target;\r\n        setCredentials({...userCredentials,[name]: value})\r\n    }\r\n    \r\n    return (\r\n        <div className='sign-in'>\r\n\r\n            <h2>I already have an account</h2>\r\n            <span>Sign in with your email and password</span>\r\n\r\n            <form action=\"\" onSubmit={handleSubmit}>\r\n\r\n                <FormInput label='email' type=\"email\" name='email' required value={email} handleChange={handleChange} />\r\n                \r\n\r\n                <FormInput label='password' type=\"password\" name='password' required value={password} handleChange={handleChange} />\r\n                \r\n                <div className='buttons'>\r\n                    <CustomButton type='submit' value='Sign In'> Sign In </CustomButton>\r\n                    <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn> {' '} Sign In With Google {' '} </CustomButton>\r\n                </div>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart : () => dispatch(googleSignInStart()),\r\n    emailSignInStart : (email, password) => dispatch(emailSignInStart({email, password}))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}