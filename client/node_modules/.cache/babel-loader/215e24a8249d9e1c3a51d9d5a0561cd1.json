{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\user\\\\Desktop\\\\lario\\\\projects\\\\react\\\\crown-clothings\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport cartActionTypes from './cart.types';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case cartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case cartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case cartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case cartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/lario/projects/react/crown-clothings/client/src/redux/cart/cart.reducer.js"],"names":["cartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CLEAR_CART"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAsBC,kBAAtB,QAA+C,cAA/C;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAG,IADS;AAElBC,EAAAA,SAAS,EAAG;AAFM,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAG,CAACG,KAAK,CAACH;AAFpB;;AAKJ,SAAKJ,eAAe,CAACW,QAArB;AACI,+BACOJ,KADP;AAEIF,QAAAA,SAAS,EAAGJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF7B;;AAKJ,SAAKZ,eAAe,CAACa,WAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAGH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFlC;;AAKJ,SAAKZ,eAAe,CAACc,oBAArB;AACI,+BACOP,KADP;AAEIF,QAAAA,SAAS,EAAGE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAlE;AAFhB;;AAIJ,SAAKjB,eAAe,CAACkB,UAArB;AACI,+BACOX,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAKJ;AACI,aAAOE,KAAP;AA/BR;AAkCH,CAnCD;;AAqCA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from './cart.types'\r\nimport {addItemToCart,removeItemFromCart} from './cart.utils'\r\n\r\nconst INITIAL_STATE = {\r\n    hidden : true,\r\n    cartItems : []\r\n}\r\n\r\nconst cartReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case cartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return{\r\n                ...state,\r\n                hidden : !state.hidden\r\n            }\r\n            \r\n        case cartActionTypes.ADD_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems : addItemToCart(state.cartItems, action.payload)\r\n            }\r\n\r\n        case cartActionTypes.REMOVE_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems : removeItemFromCart(state.cartItems, action.payload)\r\n            }\r\n\r\n        case cartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return{\r\n                ...state,\r\n                cartItems : state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\r\n            }\r\n        case cartActionTypes.CLEAR_CART:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n            \r\n    }\r\n}\r\n\r\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}